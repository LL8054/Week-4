master <- rbind(master,data[i,])
}
}
for (i in 1:nrow(data)) {
if ("MD" == data[i,7]) {
master <- rbind(master,data[i,])
}
}
master
dim(master)
master[,2]
dim(master)
master[,23]
master[34,]
master[34,2]
min(master[,23])
master[,23]
which.min(apply(master))
?which.min
which.min(master[,23])
master[34,23]
master[34,2]
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best.R')
rm(data)
rm(master)
rm(outcome)
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best.R')
best("TX", "heart attack")
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best.R')
best("TX", "heart attack")
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best.R')
best("TX", "heart attack")
## Finds the best hospital in a state for a named outcome
best <- function(state, outcome) {
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Checks validity of state input.
state_check <- match(state,unique(data[,7]))
if (is.na(state_check == TRUE)) {
stop("invalid state")
}
## Checks validity of outcome input.
possible_outcomes <- c("heart attack", "heart failure", "pneumonia")
outcome_check <- match(outcome,possible_outcomes)
if (is.na(outcome_check == TRUE)) {
stop("invalid outcome")
}
if (outcome == "heart attack") outcome_col <- 11
if (outcome == "heart failure") outcome_col <- 17
if (outcome == "pneumonia") outcome_col <- 23
## If both state and output input are valid, returns char vector of name of
## hospital with the best 30-day mortality rate in that state.
master <- data.frame()
for (i in 1:nrow(data)) {
if (state == data[i,7]) {
master <- rbind(master,data[i,])
}
}
hospital_name <- master[which.min(master[,outcome_col], 2]
hospital_name
}
## Finds the best hospital in a state for a named outcome
best <- function(state, outcome) {
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Checks validity of state input.
state_check <- match(state,unique(data[,7]))
if (is.na(state_check == TRUE)) {
stop("invalid state")
}
## Checks validity of outcome input.
possible_outcomes <- c("heart attack", "heart failure", "pneumonia")
outcome_check <- match(outcome,possible_outcomes)
if (is.na(outcome_check == TRUE)) {
stop("invalid outcome")
}
if (outcome == "heart attack") outcome_col <- 11
if (outcome == "heart failure") outcome_col <- 17
if (outcome == "pneumonia") outcome_col <- 23
## If both state and output input are valid, returns char vector of name of
## hospital with the best 30-day mortality rate in that state.
master <- data.frame()
for (i in 1:nrow(data)) {
if (state == data[i,7]) {
master <- rbind(master,data[i,])
}
}
hospital_name <- master[which.min(master[,outcome_col]), 2]
hospital_name
}
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
best("MD", "pneumonia")
best("MD", "heart attack")
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best.R')
master <- data.frame()
for (i in 1:nrow(data)) {
if (MD == data[i,7]) {
master <- rbind(master,data[i,])
}
}
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
for (i in 1:nrow(data)) {
if (MD == data[i,7]) {
master <- rbind(master,data[i,])
}
}
for (i in 1:nrow(data)) {
if ("MD"" == data[i,7]) {
master <- rbind(master,data[i,])
}
}
master
for (i in 1:nrow(data)) {
if ("MD"" == data[i,7]) {
master <- rbind(master,data[i,])
}
}
for (i in 1:nrow(data)) {
if (MD == data[i,7]) {
master <- rbind(master,data[i,])
}
master}
master
nrow(data)
for (i in 1:nrow(data)) {
if ("MD"" == data[i,7]) {
master <- rbind(master,data[i,])
}
master}
for (i in 1:nrow(data)) {
if ("MD"" == data[i,7]) {
master <- rbind(master,data[i,])
}
}
for (i in 1:nrow(data)) {
if ("MD"" == data[i,7]) {
master <- rbind(master,data[i,])
}
}
master <- data.frame()
master
master
master <- data.frame()
for (i in 1:nrow(data)) {
if (state == data[i,7]) {
master <- rbind(master,data[i,])
}
}
for (i in 1:nrow(data)) {
if ("MD" == data[i,7]) {
master <- rbind(master,data[i,])
}
}
master[,23]
class(master[,23])
xx <- sapply(master[,23])
xx <- sapply(xx,master[,23])
master[,23] <- "numeric"
class(master[,23])
master[,23]
for (i in 1:nrow(data)) {
if ("MD" == data[i,7]) {
master <- rbind(master,data[i,])
}
}
master
master[,23]
master <- data.frame()
for (i in 1:nrow(data)) {
if ("MD" == data[i,7]) {
master <- rbind(master,data[i,])
}
}
master[,23]
f <- transform(master, master[,23] = as.numeric(master[,23]))
f <- transform(master, d = as.numeric(master[,23]))
f
dim(f)
rm(f)
f <- transform(master, d = as.numeric(master[,23]))
dim(f)
colnames(f)
rm(f)
f <- transform(master, as.numeric(master[,23]))
f
class(f)
class(f[,23])
f[,23]
rm(f)
class(master[,23])
as.numeric(as.character(master$23))
master[,23] <- sapply(master[,23], as.numeric)
master[,23]
class(master[,23])
which.min(master[,23])
master[34,2]
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best.R')
best("TX", "heart attack")
warnings()
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best.R')
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
x<-c(1,1,2)
x
which.min(c)
which.min(x)
## Finds the best hospital in a state for a named outcome
best <- function(state, outcome) {
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Checks validity of state input.
state_check <- match(state,unique(data[,7]))
if (is.na(state_check == TRUE)) {
stop("invalid state")
}
## Checks validity of outcome input.
possible_outcomes <- c("heart attack", "heart failure", "pneumonia")
outcome_check <- match(outcome,possible_outcomes)
if (is.na(outcome_check == TRUE)) {
stop("invalid outcome")
}
if (outcome == "heart attack") outcome_col <- 11
if (outcome == "heart failure") outcome_col <- 17
if (outcome == "pneumonia") outcome_col <- 23
## If both state and output input are valid, returns char vector of name of
## hospital with the best 30-day mortality rate in that state.
master <- data.frame()
for (i in 1:nrow(data)) {
if (state == data[i,7]) {
master <- rbind(master,data[i,])
}
}
##hospital_name <- master[which.min(master[,outcome_col]), 2]
hospital_name <- master[match(min(master[,outcome_col]),master[,outcome_col]), 2]
hospital_name
}
best("TX", "heart attack")
best("TX", "heart failure")
## Finds the best hospital in a state for a named outcome
best <- function(state, outcome) {
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
## Checks validity of state input.
state_check <- match(state,unique(data[,7]))
if (is.na(state_check == TRUE)) {
stop("invalid state")
}
## Checks validity of outcome input.
possible_outcomes <- c("heart attack", "heart failure", "pneumonia")
outcome_check <- match(outcome,possible_outcomes)
if (is.na(outcome_check == TRUE)) {
stop("invalid outcome")
}
if (outcome == "heart attack") outcome_col <- 11
if (outcome == "heart failure") outcome_col <- 17
if (outcome == "pneumonia") outcome_col <- 23
## If both state and output input are valid, returns char vector of name of
## hospital with the best 30-day mortality rate in that state.
master <- data.frame()
for (i in 1:nrow(data)) {
if (state == data[i,7]) {
master <- rbind(master,data[i,])
}
}
hospital_name <- master[which.min(master[,outcome_col]), 2]
##hospital_name <- master[match(min(master[,outcome_col]),master[,outcome_col]), 2]
hospital_name
}
best("TX", "heart failure")
x
min(x)
match(1,x)
match(x,1)
match(x,2)
y <- match(x,2)
y
length(y)
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
best("TX", "heart attack")
master <- data.frame()
for (i in 1:nrow(data)) {
if (state == data[i,7]) {
master <- rbind(master,data[i,])
}
}
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
rm(master)
master <- data.frame()
for (i in 1:nrow(data)) {
if (state == data[i,7]) {
master <- rbind(master,data[i,])
}
}
master <- data.frame()
for (i in 1:nrow(data)) {
if ("MD" == data[i,7]) {
master <- rbind(master,data[i,])
}
}
outcome_col <- 23
smallest <- min(master[,outcome_col])
smallest
master[,outcome_col]
as.numeric(as.character(master[,outcome_col]))
x <- as.numeric(as.character(master[,outcome_col]))
min(x)
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
best("MD", "pneumonia")
smallest <- min(as.numeric(as.character(master[,outcome_col])))
smallest_list <- match(master, smallest)
smallest_list
master
smallest_list <- match(master[,outcome_col], smallest)
smallest_list
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
best("MD", "pneumonia")
unique(smallest_list
)
length(unique(smallest_list)
)
length(smallest_list)
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
best("MD", "pneumonia")
best("TX", "heart attack")
best("TX", heart failure"")
best("TX", "heart failure"")
best("TX", "heart failure)
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attac")
best("BB", "heart attack")
beste("NY", "hert attack")
best("NY", "hert attack")
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
best("TX", "heart failure")
smallest_list
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
best("TX", "heart attack")
length(smallest_list)
small_list[35]
smallest_list[35]
smallest_list[34]
class(smallest_list[34])
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
best("TX", "heart attack")
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
best("TX", "heart attack")
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
best("TX", "heart attack")
smallest_list[34]
class(smallest_list[34])
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
best("TX", "heart attack")
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
best("TX", "heart attack")
traceback()
smallest_list[34]
x <- smallest_list[34] > 0
x
x <- smallest_list[33] > 0
x
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
best("TX", "heart attack")
order(master[2],)
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
best("TX", "heart attack")
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
best("TX", "heart attack")
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
best("TX", "heart attack")
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
best("TX", "heart attack")
smallest
smallest_list
final <- data.frame()
final
for(i in 1:length(smallest_list)) {
if (!is.na(smallest_list[i])) {
final <- rbind(final,master[i,])
}
}
final
dim(final)
final[,2]
sort.final <- with(final, final[order(2),])
sort.final
sort.final[1,2]
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
best("TX", "heart attack")
best("MD", "pneumonia")
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
outcome_col <- 11
master <- data.frame()
for (i in 1:nrow(data)) {
if ("TX" == data[i,7]) {
master <- rbind(master,data[i,])
}
}
master[,7]
smallest <- min(as.numeric(as.character(master[,outcome_col])))
smallest
master
length(master[,11])
master <- data.frame()
for (i in 1:nrow(data)) {
if (state == data[i,7]) {
master <- rbind(master,data[i,])
}
}
master <- data.frame()
for (i in 1:nrow(data)) {
if ("TX" == data[i,7]) {
master <- rbind(master,data[i,])
}
}
length(master)
master[,7]
unique(master[,7])
master[,11]
smallest
class(smallest[,11])
class(master[,11])
as.numeric(as.character(master[,11]))
min(as.numeric(as.character(master[,11])))
min(as.numeric(as.character(master[,11])), na.rm=TRUE)
smallest_list <- match(master[,outcome_col], smallest)
final <- data.frame()
for(i in 1:length(smallest_list)) {
if (!is.na(smallest_list[i])) {
final <- rbind(final,master[i,])
}
}
sort.final <- with(final, final[order(2),])
hospital_name <- sort.final[1,2]
hospital_name
smallest
smallest <- min(as.numeric(as.character(master[,11])), na.rm=TRUE)
smallest
smallest_list <- match(master[,outcome_col], smallest)
ngth(unique(smallest_list))>2) {
final <- data.frame()
for(i in 1:length(smallest_list)) {
if (!is.na(smallest_list[i])) {
final <- rbind(final,master[i,])
}
}
sort.final <- with(final, final[order(2),])
hospital_name <- sort.final[1,2]
hospital_name
final <- data.frame()
for(i in 1:length(smallest_list)) {
if (!is.na(smallest_list[i])) {
final <- rbind(final,master[i,])
}
}
length(smallest_list)
unique(smallest_list)
smallest_list
master[,outcome_col]
x <- as.numeric(as.character(master[,outcome_col]))
x
smallest <- min(x, na.rm=TRUE)
smallest
x
smallest_list <- match(x, smallest)
smallest_list
final <- data.frame()
for(i in 1:length(smallest_list)) {
if (!is.na(smallest_list[i])) {
final <- rbind(final,master[i,])
}
}
sort.final <- with(final, final[order(2),])
hospital_name <- sort.final[1,2]
hospital_name
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best2.R')
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best.R')
source('~/LL/Coursera/Courses/R Programming/Week 4/Week 4 Assignment/best.R')
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
bye()
quit()
